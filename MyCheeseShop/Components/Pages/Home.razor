@page "/"
@using MyCheeseShop.Components.Account.Shared
@using MyCheeseShop.Context
@using MyCheeseShop.Model
@inject CheeseProvider CheeseProvider
@inject NavigationManager NavigationManager
@inject ShoppingCart ShoppingCart

@if (cheeses is null)
{
    <p>Loading...</p>
}
else if (!cheeses.Any())
{
    <p>No cheeses found</p>
}


<div class="d-flex mb-1 justify-content-between">
    <div class="d-flex">
        <div class="dropdown me-1">
            <a class="btn btn-outline-primary dropdown-toggle" href="#" role="button" data-bs-toggle="dropdown" aria-expanded="false">
                Sort by @sortCriteria.ToString()
            </a>
            <ul class="dropdown-menu">
                <li><a class="dropdown-item" href="#" @onclick="() => Sort(SortCriteria.Name)">Name</a></li>
                <li><a class="dropdown-item" href="#" @onclick="() => Sort(SortCriteria.Price)">Price</a></li>
                <li><a class="dropdown-item" href="#" @onclick="() => Sort(SortCriteria.Type)">Type</a></li>
                <li><a class="dropdown-item" href="#" @onclick="() => Sort(SortCriteria.Strength)">Strength</a></li>
            </ul>
        </div>
        <div class="col-sm-8">
            <input type="text" class="form-control btn-outline-primary" placeholder="Search for cheese..." @bind="searchTerm" @bind:event="oninput" />
        </div>
    </div>
    <div class="mt-2 mt-md-0">
        <a @onclick="GoToCart" class="btn btn-outline-primary">Cart</a>
    </div>
</div>

<div class="row row-cols-1 row-cols-md-4 g-4 d-flex align-items-center flex-column mb-2">
    <div class="card">
        <h1 class="mb-3 text-center">Top sellers</h1>
        <div id="carouselExampleCaptions" class="carousel slide pb-1">
            <div class="carousel-indicators">
                <button type="button" data-bs-target="#carouselExampleCaptions" data-bs-slide-to="0" class="active" aria-current="true" aria-label="Slide 1"></button>
                <button type="button" data-bs-target="#carouselExampleCaptions" data-bs-slide-to="1" aria-label="Slide 2"></button>
                <button type="button" data-bs-target="#carouselExampleCaptions" data-bs-slide-to="2" aria-label="Slide 3"></button>
            </div>
            <div class="carousel-inner">
                <div class="carousel-item active">
                    <img src="./img/mozzarella.jpg" class="d-block w-100" alt="...">
                    <div class="carousel-caption d-none d-md-block">
                        <h5>Mozzarella</h5>
                        <p>A fresh Italian cheese known for its stretchy texture</p>
                    </div>
                </div>
                <div class="carousel-item">
                    <img src="./img/boursault.jpg" class="d-block w-100" alt="...">
                    <div class="carousel-caption d-none d-md-block">
                        <h5>Boursault</h5>
                        <p>A French triple-cream cheese with a rich and creamy texture</p>
                    </div>
                </div>
                <div class="carousel-item">
                    <img src="./img/cheddar.jpg" class="d-block w-100" alt="...">
                    <div class="carousel-caption d-none d-md-block">
                        <h5>Cheddar</h5>
                        <p>A sharp and aged cheese</p>
                    </div>
                </div>
            </div>
            <button class="carousel-control-prev" type="button" data-bs-target="#carouselExampleCaptions" data-bs-slide="prev">
                <span class="carousel-control-prev-icon" aria-hidden="true"></span>
                <span class="visually-hidden">Previous</span>
            </button>
            <button class="carousel-control-next" type="button" data-bs-target="#carouselExampleCaptions" data-bs-slide="next">
                <span class="carousel-control-next-icon" aria-hidden="true"></span>
                <span class="visually-hidden">Next</span>
            </button>
        </div>
    </div>
</div>

<div class="row row-cols-1 row-cols-md-4 g-4">
    @foreach (var cheese in FilteredCheeses)
    {
        <div class="col">
            <StoreItem Cheese="cheese" />
        </div>
    }
    @if (!FilteredCheeses.Any())
    {
        <p>No cheeses found</p>
    }
</div>

@code {
    private SortCriteria sortCriteria = SortCriteria.Name;
    private string searchTerm = "";

    private IEnumerable<Cheese> cheeses;

    private IEnumerable<Cheese> filteredCheeses;
    private IEnumerable<Cheese> FilteredCheeses
    {
        get
        {
            return filteredCheeses.Where(GetSearchCriteria);
        }
        set
        {
            filteredCheeses = value;
        }
    }

    private bool GetSearchCriteria(Cheese cheese)
    {
        if (string.IsNullOrWhiteSpace(searchTerm)) return true;

        return cheese.Name.Contains(searchTerm, StringComparison.OrdinalIgnoreCase)
            || cheese.Type.Contains(searchTerm, StringComparison.OrdinalIgnoreCase)
            || cheese.Description.Contains(searchTerm, StringComparison.OrdinalIgnoreCase)
            || cheese.Strength.Contains(searchTerm, StringComparison.OrdinalIgnoreCase);
    }

    protected override async Task OnInitializedAsync()
    {
        cheeses = await CheeseProvider.GetAllCheesesAsync();
        filteredCheeses = cheeses;
        ShoppingCart.OnCartUpdated += StateHasChanged;
    }

    private void GoToCart()
    {
        NavigationManager.NavigateTo("/cart");
    }

    private void Sort(SortCriteria criteria)
    {
        sortCriteria = criteria;
        filteredCheeses = criteria switch
        {
            SortCriteria.Name => FilteredCheeses = filteredCheeses.OrderBy(c => c.Name),
            SortCriteria.Price => FilteredCheeses = filteredCheeses.OrderBy(c => c.Price),
            SortCriteria.Type => FilteredCheeses = filteredCheeses.OrderBy(c => c.Type),
            SortCriteria.Strength => FilteredCheeses = filteredCheeses.OrderBy(c => c.Strength),
            _ => filteredCheeses
        };
    }

    private enum SortCriteria
    {
        Name,
        Price,
        Type,
        Strength
    }
}
